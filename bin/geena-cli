#!/usr/bin/env node
'use strict';
/*
 * This file is part of the geena package.
 * Copyright (c) ${year} Rhinostone <geena@rhinostone.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var net = require('net');

var isWin32 = (process.platform === 'win32') ? true : false;
process.argv.push('--is-win32=' + isWin32);

var binPath = __dirname;
var geenaPath = (binPath.replace(/\\/g, '/')).replace('/bin', '');
geenaPath = (isWin32) ? geenaPath.replace(/\//g, '\\') : geenaPath;

var help = require(geenaPath + '/utils/helper.js');
help.filterArgs();

//check for $HOME path, alert if empty
var home = help.getUserHome();
if (!home) {
    console.error('No ' + ((isWin32) ? 'USERPROFILE' : 'HOME') + ' path found.')
} else {
    help.setEnvVar('GEENA_HOME', home);
    help.setEnvVar('GEENA_DIR', geenaPath);
    home = help.getEnvVar('GEENA_HOMEPATH') ||Â home + '/.geena'
}


var pack = geenaPath + '/package.json';
pack =  (isWin32) ? pack.replace(/\//g, '\\') : pack;


try {
    pack = require(pack)
} catch (err) {
    console.log('geena: could not find "' + pack + '"');
    process.exit(1)
}

/**
 * Checking project config
 *
 * */
var port = 8124;

var allowedOffline = [
    'dev:',
    'env:',
    'framework:',
    '--',//options or other aliases.
    '-'//options or other aliases.
];

if (process.argv[2].indexOf(':') < 0) {
    process.argv[2] = 'framework:' + process.argv[2];
}

if (
    typeof(process.argv[2]) != 'undefined' &&
    process.argv[2] === 'start' /**&&
    process.argv.length < 4 */||
    typeof(process.argv[2]) != 'undefined' &&
    process.argv[2] === 'framework:start'
) {

    //Start framework & pass service options.
    require(binPath + '/geena-cmd')({
        binPath : binPath,
        geenaPath : geenaPath,
        homedir : home,
        port: port,
        pack : pack
    }, help)

} else if (
    typeof(process.argv[2]) != 'undefined' &&
    allowedOffline.indexOf( (process.argv[2].split(':')[0] + ':')) > -1 ||
    process.argv[2].substr(0, 2) === '--' ||
    process.argv[2].substr(0, 1) === '-'
) {

    require(binPath + '/geena-cmd')({
        binPath : binPath,
        geenaPath : geenaPath,
        homedir : home,
        port: port,
        pack : pack
    }, help, true)

} else {

    //Connect to framework.
    var client = net.connect({port: port},
        function() {
            //Forwarding cmd.
            client.write( JSON.stringify(process.argv) );
            console.log('Geena Command Line Tool\r\n')
        }
    );

    client.on('data', function(data) {
        //Acknowledging ready state.
        console.log( data.toString() + '\n');
        client.end()
    });

    //client end event.
    client.on('end', function() {
        process.exit(0)
    });

    client.on('error', function(err) {
        if (isWin32) {
            console.log('If not started, try to start framework as Administrator :\n$ geena start')
        } else {
            console.log('If not started, try to start framework with:\n$ sudo geena start')
        }
        process.exit(1)
    })
}