#!/usr/bin/env node

/*
 * This file is part of the geena package.
 * Copyright (c) ${year} Rhinostone <geena@rhinostone.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

var fs  = require('fs');
var net = require('net');
var child = require('child_process');

var isWin32 = (process.platform == 'win32') ? true : false;
var executionPath = process.cwd();
var binPath = __dirname;
var geenaPath = (binPath.replace(/\\/g, '/')).replace('/bin', '');
geenaPath = (isWin32) ? geenaPath.replace(/\//g, '\\') : geenaPath;

var help = require(geenaPath + '/lib/utils/helper.js');
help.filterArgs();

//check for $HOME path, alert if empty
var home = help.getUserHome();
if (!home) {
    console.error('No ' + ((isWin32) ? 'USERPROFILE' : 'HOME') + ' path found.')
} else {
    help.setEnvVar('GEENA_HOME', home);
    home = help.getEnvVar('GEENA_HOMEPATH') ||Â home + '/.geena'
}


var pack = geenaPath + '/package.json';
pack =  (isWin32) ? pack.replace(/\//g, '\\') : pack;


try {
    pack = require(pack)
} catch (err) {
    console.log('geena: could not find "' + pack + '"');
    process.exit(1)
}

/**
 * Checking project config
 *
 * */
//var conf = help.loadProjectConfiguration(home);

var port = 8124;

if (
    typeof(process.argv[2]) != 'undefined'
        && process.argv[2] == "start"
        && process.argv.length < 4
    || typeof(process.argv[2]) != 'undefined'
        && process.argv[2] == 'framework:start'
) {
    //Start framework & pass service options.
    require(binPath + '/geena-cmd')({
        binPath : binPath,
        geenaPath : geenaPath,
        home : home,
        port: port,
        pack : pack
    }, help)

} else if (typeof(process.argv[2]) != 'undefined' && process.argv[2] == '.') {

    //redirect to geena path: __dirname.
    console.log('framework path is: ', __dirname.replace(/bin/, ''));
    console.log('geena-cli path is: ', __dirname);
    console.log('exec path is: ', executionPath );

} else if (typeof(process.argv[2]) != 'undefined' && process.argv[2] == 'open') {
    //redirect to geena path: __dirname.
    var openCmd = (isWin32) ?  'start' : 'open';

    switch (process.argv[3]) {
        case 'service':
        case 'services':
            child.exec(openCmd + ' ' + __dirname.replace(/bin/, '/services'));
            break;

        case 'geena':
        case 'framework':
            child.exec(openCmd + ' ' + __dirname.replace(/bin/, ''));
            break;

        case 'home':
            if ( fs.existsSync(home) )
                child.exec(openCmd + ' ' + home);
            break;

        default:
            console.log('geena: Sorry, shortcut not indexed [' + process.argv[3] + ']' );
    }
} else {

    //Connect to framework.
    var client = net.connect({port: port},
        function() {
            //Forwarding cmd.
            client.write( JSON.stringify(process.argv) )
            console.log('Geena Command Line Tool\r\n');
            //client.write('world!\r\n')
        }
    );
    client.on('data', function(data) {
        //Acknowledging ready state.
        console.log( data.toString() + '\n');
        client.end()
    });

    //client end event.
    client.on('end', function() {
        //console.log('geena: client disconnected')
        process.exit(0)
    });

    client.on('error', function(err) {
        console.log('If not started, try to start framework with:\n$ geena start')
        process.exit(1)
    })
}


/**
var args = process.argv ;
var node = args.shift(); // node
var file = args.shift(); // this file

var join = require('path').join;
var sprintf = require('util').format;
var cp = require('child_process');
var executable = join(__dirname, sprintf('geena-%s', process.argv.shift()));

args.unshift(node);
args.unshift(file);

require(executable);

*/
