#!/usr/bin/env node
'use strict';
/*
 * This file is part of the geena package.
 * Copyright (c) ${year} Rhinostone <geena@rhinostone.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var Cmd;

var fs      = require('fs');
var net     = require('net');
var child   = require('child_process');

//var EventEmitter = require('events').EventEmitter;
//var e = new EventEmitter();

Cmd = function(opt, help, runOffine) {

    var self = {};
    var lib = {};

    var init = function(opt, runOffine){
        self.port       = opt.port;
        self.binPath    = opt.binPath;
        self.package    = opt.pack;
        self.geenaPath  = opt.geenaPath;
        self.homedir    = opt.homedir;

        getWhatsNeeded();

        if ( typeof(runOffine) != 'undefined' ) {
            launchCmd()
        } else {
            launchFramework()
        }
    };


    var launchFramework = function(){


//        var version =  help.getEnvVar('GEENA_VERSION') || self.package.version;
//        var frameworkPath = self.geenaPath + '/node_modules/geena.framework/' + version;
//
//        if ( !fs.existsSync(frameworkPath) ) {
//            console.log('geena: could not find version ' + version + '.\nFirst try:\n$ geena framework:install ' + version);
//            process.exit(1)
//        }
//
//        //var modulesPath = self.geenaPath + '/node_modules';
//        //require(frameworkPath + '/node_modules/colors');
//        var lib = require(frameworkPath + "/lib");
//
//        try {
//            var pack = require(frameworkPath + "/package.json")
//        } catch (err) {
//            console.log("geena: ", err.stack);
//            process.exit(1)
//        }

        var framework = net.createServer( function(conn){ //'connection' listener
            //feedback.
            conn.on('end', function(){
                console.log('geena: client disconnected')
            });

            //Receiving.
            conn.on('data', function(data){

                console.log('geena: received ', data.toString() );

                //Launch.
                lib.cmd.load({
                    geenaPath : self.geenaPath,
                    frameworkPath : self.frameworkPath,
                    pack : self.pack,
                    argv : data.toString(),
                    client : conn,
                    homedir : self.homedir
                })
            })
        });


        framework.on('error', function(err){
            if (err.code === 'EADDRINUSE') {
                console.log('geena: framework is already running.')
                //Checks if there is services to start anyway.
            } else {
                console.log('geena: could not start framework. ', err.stack)
            }
        });

        framework.listen(self.port, function(){ //'listening' listener
            console.log('geena: framework started');

            //Launch first time.
            lib.cmd.load({
                geenaPath : self.geenaPath,
                frameworkPath : self.frameworkPath,
                pack : self.pack,
                argv : JSON.stringify(process.argv),
                client : process.stdout,
                isFromFramework : true,
                homedir : self.homedir,
                task : {
                    topic : "framework",
                    action : "start"
                }
            })
        })
    };

    var launchCmd = function(){
        var cmd = process.argv[2].split(':');
        var topic = cmd[0];
        var action = cmd[1];


        lib.cmd.load({
            geenaPath : self.geenaPath,
            frameworkPath : self.frameworkPath,
            pack : self.pack,
            argv : JSON.stringify(process.argv),
            client : process.stdout,
            isFromFramework : true,
            homedir : self.homedir,
            task : {
                topic : topic,
                action : action
            }
        })
    };

    /**
     * Load lib and stuffs
     *
     * */
    var getWhatsNeeded = function(){
        var version =  help.getEnvVar('GEENA_VERSION') || self.package.version;
        var frameworkPath = self.geenaPath + '/node_modules/geena.framework/' + version;
        self.frameworkPath = frameworkPath;

        if ( !fs.existsSync(frameworkPath) ) {
            console.log('geena: could not find version ' + version + '.\nFirst try:\n$ geena framework:install ' + version);
            process.exit(1)
        }

        //var modulesPath = self.geenaPath + '/node_modules';
        //require(frameworkPath + '/node_modules/colors');
        lib = require(frameworkPath + "/lib");

        try {
            self.pack = require(frameworkPath + "/package.json")
        } catch (err) {
            console.log("geena: ", err.stack);
            process.exit(1)
        }
    };

    init(opt,runOffine)
};

module.exports = Cmd